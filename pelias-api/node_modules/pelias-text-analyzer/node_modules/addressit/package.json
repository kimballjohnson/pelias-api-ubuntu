{
  "name": "addressit",
  "description": "Freeform Street Address Parser",
  "main": "addressit.js",
  "author": {
    "name": "Damon Oehlman",
    "email": "damon.oehlman@gmail.com"
  },
  "version": "1.3.999",
  "repository": {
    "type": "git",
    "url": "https://github.com/DamonOehlman/addressit.git"
  },
  "bugs": {
    "url": "https://github.com/DamonOehlman/addressit/issues"
  },
  "dependencies": {
    "cog": "^1.0.0"
  },
  "devDependencies": {
    "tape": "^4.0.1"
  },
  "scripts": {
    "test": "node test/all.js",
    "gendocs": "gendocs > README.md"
  },
  "directories": {
    "test": "test"
  },
  "keywords": [
    "parser",
    "street",
    "address",
    "geo"
  ],
  "license": "MIT",
  "readme": "# addressit\n\nAddressIt is a freeform street address parser, that is designed to take a\npiece of text and convert that into a structured address that can be\nprocessed in different systems.\n\nThe focal point of `addressit` is on the street parsing component, rather\nthan attempting to appropriately identify various states, counties, towns,\netc, as these vary from country to country fairly dramatically. These\ndetails are instead put into a generic regions array that can be further\nparsed based on your application needs.\n\n\n[![NPM](https://nodei.co/npm/addressit.png)](https://nodei.co/npm/addressit/)\n\n[![Build Status](https://img.shields.io/travis/DamonOehlman/addressit.svg?branch=master)](https://travis-ci.org/DamonOehlman/addressit) \n\n## Example Usage\n\nThe following is a simple example of how address it can be used:\n\n```js\nvar addressit = require('addressit');\n\n// parse a made up address, with some slightly tricky parts\nvar address = addressit('Shop 8, 431 St Kilda Rd Melbourne');\n```\n\nThe `address` object would now contain the following information:\n\n```\n{ text: '8/431 ST KILDA RD MELBOURNE',\n  parts: [],\n  unit: 8,\n  country: undefined,\n  number: 431,\n  street: 'ST KILDA RD',\n  regions: [ 'MELBOURNE' ] }\n```\n\nFor more examples, see the tests.\n\n## Reference\n\n### addressit(input, opts?)\n\nRun the address parser for the given input.  Optional `opts` can be\nsupplied if you want to override the default (EN) parser.\n\n### Address\n\n#### Address#_extractStreetParts(startIndex)\n\nThis function is used to extract from the street type match\nindex *back to* the street number and possibly unit number fields.\n\nThe function will start with the street type, then also grab the previous\nfield regardless of checks.  Fields will continue to be pulled in until\nfields start satisfying numeric checks.  Once positive numeric checks are\nfiring, those will be brought in as building / unit numbers and once the\nstart of the parts array is reached or we fall back to non-numeric fields\nthen the extraction is stopped.\n\n#### Address#clean\n\nThe clean function is used to clean up an address string.  It is designed\nto remove any parts of the text that preven effective parsing of the\naddress string.\n\n#### Address#extract(fieldName, regexes)\n\nThe extract function is used to extract the specified field from the raw\nparts that have previously been split from the input text.  If successfully\nlocated then the field will be updated from the parts and that part removed\nfrom the parts list.\n\n#### Address#extractStreet\n\nThis function is used to parse the address parts and locate any parts\nthat look to be related to a street address.\n\n#### Address#finalize\n\nThe finalize function takes any remaining parts that have not been extracted\nas other information, and pushes those fields into a generic `regions` field.\n\n#### Address#split\n\nSplit the address into it's component parts, and remove any empty parts\n\n#### Address#toString\n\nConvert the address to a string representation\n\n## License(s)\n\n### MIT\n\nCopyright (c) 2015 Damon Oehlman <damon.oehlman@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "addressit@1.3.999",
  "dist": {
    "shasum": "a1caad091950778e720bc07ab507829c5f9f2b8a"
  },
  "_resolved": "git://github.com/dianashk/addressit.git#f4afc31c436f9276a398ef15aac82c98ca568a5b",
  "_from": "addressit@git://github.com/dianashk/addressit.git#temp"
}
