{
  "name": "pelias-suggester-pipeline",
  "author": {
    "name": "mapzen"
  },
  "version": "2.0.4",
  "description": "Streaming geonames parser",
  "homepage": "https://github.com/pelias/suggester-pipeline",
  "license": "MIT",
  "main": "index.js",
  "scripts": {
    "test": "node test/run.js | tap-spec"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/pelias/suggester-pipeline.git"
  },
  "keywords": [
    "geonames",
    "stream",
    "parser"
  ],
  "bugs": {
    "url": "https://github.com/pelias/suggester-pipeline/issues"
  },
  "engines": {
    "node": ">=0.10.26",
    "npm": ">=1.4.3"
  },
  "dependencies": {
    "through2": "^0.5.1"
  },
  "devDependencies": {
    "tape": "^2.13.4",
    "precommit-hook": "1.0.7",
    "tap-spec": "^0.2.0"
  },
  "readme": "# suggester-pipeline\n[![Build Status](https://travis-ci.org/pelias/suggester-pipeline.svg?branch=master)](https://travis-ci.org/pelias/suggester-pipeline)\n\n[![NPM](https://nodei.co/npm/pelias-suggester-pipeline.png)](https://nodei.co/npm/pelias-suggester-pipeline/)\n\nExports a Transform stream that builds the suggester payload (data used in `/suggest` queries by the Pelias API) in\nreceived objects. Data being sent to the Pelias elasticsearch index *must* be `pipe`'d through the this stream or it\nwon't turn up in suggest results. All inbound records must contain the following properties:\n\n```\n{\n\tname: {\n\t\tdefault: ...\n\t},\n\t_meta: {\n\t\ttype: ...,\n\t\tid: ...\n\t}\n}\n```\n\nAnd will receive a `suggest` property mapped to an object. If you're using\n[pelias-model](https://github.com/pelias/model), everything will work right out of the box.\n\n## example usage\n```javascript\nvar peliasSuggesterPipeline = require( 'pelias-suggester-pipeline' );\n\nsomeDocumentStream\n\t.pipe( peliasSuggesterPipeline.pipeline )\n\t.pipe( /* rest of pelias pipeline */ );\n```\n",
  "readmeFilename": "README.md",
  "_id": "pelias-suggester-pipeline@2.0.4",
  "_from": "pelias-suggester-pipeline@2.0.4"
}
